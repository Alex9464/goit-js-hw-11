{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '47457730-c1e96e42c58ea46d8ed7b0f32';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n/**\n * @param {string} query\n * @returns {Promise<Array>}\n */\nexport async function fetchImages(query) {\n  if (!query.trim()) {\n    throw new Error('Search query cannot be empty.');\n  }\n\n  const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  try {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    if (!data.hits.length) {\n      throw new Error('No images found for this query.');\n    }\n\n    return data.hits;\n  } catch (error) {\n    console.error('Fetch error:', error);\n    throw error;\n  }\n}","/**\n * @param {Object} image\n * @returns {string}\n */\n  \n  /**\n   @param {Array} images\n   */\n  \n  export function renderGallery(images) {\n    const gallery = document.querySelector('#gallery');\n    gallery.innerHTML = images.map(createImageCard).join('');\n  }\n\n  export function createImageCard(image) {\n    return `\n      <div class=\"photo-card\">\n        <a href=\"${image.largeImageURL}\">\n          <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p><b>Likes:</b> ${image.likes}</p>\n          <p><b>Views:</b> ${image.views}</p>\n          <p><b>Comments:</b> ${image.comments}</p>\n          <p><b>Downloads:</b> ${image.downloads}</p>\n        </div>\n      </div>\n    `;\n  }","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox = null;\n\nasync function onSearch(event) {\n  event.preventDefault();\n  const query = document.querySelector('#search-input').value.trim();\n\n  document.querySelector('#loading').style.display = 'block';\n\n  try {\n    const images = await fetchImages(query);\n    renderGallery(images);\n    if (!lightbox) {\n      lightbox = new SimpleLightbox('.gallery a', {\n        captions: true,\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n    } else {\n      lightbox.refresh();\n    }\n  } catch (error) {\n    console.error(error.message);\n  } finally {\n    document.querySelector('#loading').style.display = 'none';\n  }\n}\n\ndocument.querySelector('#search-form').addEventListener('submit', onSearch);"],"names":["API_KEY","BASE_URL","fetchImages","query","url","response","data","error","renderGallery","images","gallery","createImageCard","image","lightbox","onSearch","event","SimpleLightbox"],"mappings":"svBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAMV,eAAeC,EAAYC,EAAO,CACvC,GAAI,CAACA,EAAM,OACT,MAAM,IAAI,MAAM,+BAA+B,EAGjD,MAAMC,EAAM,GAAGH,CAAQ,QAAQD,CAAO,MAAM,mBAAmBG,CAAK,CAAC,2DAErE,GAAI,CACF,MAAME,EAAW,MAAM,MAAMD,CAAG,EAEhC,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,UAAUA,EAAS,MAAM,EAAE,EAG7C,MAAMC,EAAO,MAAMD,EAAS,OAE5B,GAAI,CAACC,EAAK,KAAK,OACb,MAAM,IAAI,MAAM,iCAAiC,EAGnD,OAAOA,EAAK,IACb,OAAQC,EAAO,CACd,cAAQ,MAAM,eAAgBA,CAAK,EAC7BA,CACP,CACH,CCvBS,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAYD,EAAO,IAAIE,CAAe,EAAE,KAAK,EAAE,CACxD,CAEM,SAASA,EAAgBC,EAAO,CACrC,MAAO;AAAA;AAAA,mBAEQA,EAAM,aAAa;AAAA,sBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA,6BAG/BA,EAAM,KAAK;AAAA,6BACXA,EAAM,KAAK;AAAA,gCACRA,EAAM,QAAQ;AAAA,iCACbA,EAAM,SAAS;AAAA;AAAA;AAAA,KAIhD,CCvBA,IAAIC,EAAW,KAEf,eAAeC,EAASC,EAAO,CAC7BA,EAAM,eAAc,EACpB,MAAMZ,EAAQ,SAAS,cAAc,eAAe,EAAE,MAAM,OAE5D,SAAS,cAAc,UAAU,EAAE,MAAM,QAAU,QAEnD,GAAI,CACF,MAAMM,EAAS,MAAMP,EAAYC,CAAK,EACtCK,EAAcC,CAAM,EACfI,EAOHA,EAAS,QAAO,EANhBA,EAAW,IAAIG,EAAe,aAAc,CAC1C,SAAU,GACV,aAAc,MACd,aAAc,GACtB,CAAO,CAIJ,OAAQT,EAAO,CACd,QAAQ,MAAMA,EAAM,OAAO,CAC/B,QAAY,CACR,SAAS,cAAc,UAAU,EAAE,MAAM,QAAU,MACpD,CACH,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,SAAUO,CAAQ"}