{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\n\nconst API_KEY = '47457730-c1e96e42c58ea46d8ed7b0f32';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1, perPage = 20) {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page,\n        per_page: perPage,\n      },\n    });\n\n    if (response.data.hits.length === 0) {\n      iziToast.warning({ message: 'No images found. Please try another query!' });\n      return null;\n    }\n\n    return response.data;\n  } catch (error) {\n    iziToast.error({ message: 'Failed to fetch images. Please try again later!' });\n    throw new Error(error);\n  }\n}","export function renderGallery(images, container) {\n  if (!images || images.length === 0) {\n    container.innerHTML = '';\n    return;\n  }\n\n  const markup = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n      <div class=\"photo-card\">\n        <a href=\"${largeImageURL}\" class=\"gallery-link\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        </a>\n        <div class=\"info\">\n          <p class=\"info-item\">\n            <b>Likes:</b> ${likes}\n          </p>\n          <p class=\"info-item\">\n            <b>Views:</b> ${views}\n          </p>\n          <p class=\"info-item\">\n            <b>Comments:</b> ${comments}\n          </p>\n          <p class=\"info-item\">\n            <b>Downloads:</b> ${downloads}\n          </p>\n        </div>\n      </div>\n    `\n    )\n    .join('');\n  container.innerHTML += markup;\n}\n\nexport function clearGallery(container) {\n  container.innerHTML = '';\n}","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery, clearGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst form = document.querySelector('#search-form');\nconst galleryContainer = document.querySelector('.gallery');\nconst loadMoreButton = document.querySelector('.load-more');\n\nlet currentPage = 1;\nlet currentQuery = '';\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n\n  const query = event.target.querySelector('#search-input').value.trim();\n  if (!query) {\n    iziToast.warning({ message: 'Please enter a search query!' });\n    return;\n  }\n\n  currentQuery = query;\n  currentPage = 1;\n\n  clearGallery(galleryContainer);\n\n  try {\n    const data = await fetchImages(currentQuery, currentPage);\n\n    if (data && data.hits.length > 0) {\n      renderGallery(data.hits, galleryContainer);\n      iziToast.success({ message: `Found ${data.totalHits} images!` });\n      loadMoreButton.style.display = 'block';\n    } else {\n      loadMoreButton.style.display = 'none';\n    }\n  } catch (error) {\n    console.error(error);\n  }\n});\n\nloadMoreButton.addEventListener('click', async () => {\n  currentPage += 1;\n\n  try {\n    const data = await fetchImages(currentQuery, currentPage);\n\n    if (data && data.hits.length > 0) {\n      renderGallery(data.hits, galleryContainer);\n    } else {\n      iziToast.info({ message: 'No more images to load!' });\n      loadMoreButton.style.display = 'none';\n    }\n  } catch (error) {\n    console.error(error);\n  }\n});\n\ndocument.querySelector('#search-form').addEventListener('submit', onSearch);"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","response","axios","iziToast","error","renderGallery","images","container","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","form","galleryContainer","loadMoreButton","currentPage","currentQuery","event","data"],"mappings":"wvBAGA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC/D,GAAI,CACF,MAAMC,EAAW,MAAMC,EAAM,IAAIN,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAAC,EACA,SAAUC,CACX,CACP,CAAK,EAED,OAAIC,EAAS,KAAK,KAAK,SAAW,GAChCE,EAAS,QAAQ,CAAE,QAAS,4CAA8C,CAAA,EACnE,MAGFF,EAAS,IACjB,OAAQG,EAAO,CACd,MAAAD,EAAS,MAAM,CAAE,QAAS,iDAAmD,CAAA,EACvE,IAAI,MAAMC,CAAK,CACtB,CACH,CC9BO,SAASC,EAAcC,EAAQC,EAAW,CAC/C,GAAI,CAACD,GAAUA,EAAO,SAAW,EAAG,CAClCC,EAAU,UAAY,GACtB,MACD,CAED,MAAMC,EAASF,EACZ,IACC,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,mBAEjEL,CAAa;AAAA,sBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,4BAIpBC,CAAK;AAAA;AAAA;AAAA,4BAGLC,CAAK;AAAA;AAAA;AAAA,+BAGFC,CAAQ;AAAA;AAAA;AAAA,gCAGPC,CAAS;AAAA;AAAA;AAAA;AAAA,KAKpC,EACA,KAAK,EAAE,EACVR,EAAU,WAAaC,CACzB,CAEO,SAASQ,EAAaT,EAAW,CACtCA,EAAU,UAAY,EACxB,CC9BA,MAAMU,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAiB,SAAS,cAAc,YAAY,EAE1D,IAAIC,EAAc,EACdC,EAAe,GAEnBJ,EAAK,iBAAiB,SAAU,MAAOK,GAAU,CAC/CA,EAAM,eAAc,EAEpB,MAAMxB,EAAQwB,EAAM,OAAO,cAAc,eAAe,EAAE,MAAM,OAChE,GAAI,CAACxB,EAAO,CACVK,EAAS,QAAQ,CAAE,QAAS,8BAAgC,CAAA,EAC5D,MACD,CAEDkB,EAAevB,EACfsB,EAAc,EAEdJ,EAAaE,CAAgB,EAE7B,GAAI,CACF,MAAMK,EAAO,MAAM1B,EAAYwB,EAAcD,CAAW,EAEpDG,GAAQA,EAAK,KAAK,OAAS,GAC7BlB,EAAckB,EAAK,KAAML,CAAgB,EACzCf,EAAS,QAAQ,CAAE,QAAS,SAASoB,EAAK,SAAS,UAAU,CAAE,EAC/DJ,EAAe,MAAM,QAAU,SAE/BA,EAAe,MAAM,QAAU,MAElC,OAAQf,EAAO,CACd,QAAQ,MAAMA,CAAK,CACpB,CACH,CAAC,EAEDe,EAAe,iBAAiB,QAAS,SAAY,CACnDC,GAAe,EAEf,GAAI,CACF,MAAMG,EAAO,MAAM1B,EAAYwB,EAAcD,CAAW,EAEpDG,GAAQA,EAAK,KAAK,OAAS,EAC7BlB,EAAckB,EAAK,KAAML,CAAgB,GAEzCf,EAAS,KAAK,CAAE,QAAS,yBAA2B,CAAA,EACpDgB,EAAe,MAAM,QAAU,OAElC,OAAQf,EAAO,CACd,QAAQ,MAAMA,CAAK,CACpB,CACH,CAAC,EAED,SAAS,cAAc,cAAc,EAAE,iBAAiB,SAAU,QAAQ"}